{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pavan Kumar\\\\Final-react-project\\\\my-final-project\\\\src\\\\context\\\\WeatherContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WeatherContext = /*#__PURE__*/createContext();\nexport const WeatherProvider = ({\n  children\n}) => {\n  _s();\n  const [weather, setWeather] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchWeather = async city => {\n    setLoading(true);\n    try {\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=YOUR_API_KEY`);\n      const data = await response.json();\n      setWeather(data);\n      setError(null);\n    } catch (err) {\n      setError('Error fetching weather data');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(WeatherContext.Provider, {\n    value: {\n      weather,\n      loading,\n      error,\n      fetchWeather\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherProvider, \"9Wlma1IF1k6KD1SpIyg4lCdfsHY=\");\n_c = WeatherProvider;\nvar _c;\n$RefreshReg$(_c, \"WeatherProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","WeatherContext","WeatherProvider","children","_s","weather","setWeather","loading","setLoading","error","setError","fetchWeather","city","response","fetch","data","json","err","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Pavan Kumar/Final-react-project/my-final-project/src/context/WeatherContext.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\nexport const WeatherContext = createContext();\r\n\r\nexport const WeatherProvider = ({ children }) => {\r\n  const [weather, setWeather] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchWeather = async (city) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=YOUR_API_KEY`\r\n      );\r\n      const data = await response.json();\r\n      setWeather(data);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError('Error fetching weather data');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <WeatherContext.Provider value={{ weather, loading, error, fetchWeather }}>\r\n      {children}\r\n    </WeatherContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,OAAO,MAAMC,cAAc,gBAAGJ,aAAa,CAAC,CAAC;AAE7C,OAAO,MAAMK,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMa,YAAY,GAAG,MAAOC,IAAI,IAAK;IACnCJ,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAC1B,qDAAqDF,IAAI,qBAC3D,CAAC;MACD,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCV,UAAU,CAACS,IAAI,CAAC;MAChBL,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOO,GAAG,EAAE;MACZP,QAAQ,CAAC,6BAA6B,CAAC;IACzC,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACER,OAAA,CAACC,cAAc,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEd,OAAO;MAAEE,OAAO;MAAEE,KAAK;MAAEE;IAAa,CAAE;IAAAR,QAAA,EACvEA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B,CAAC;AAACnB,EAAA,CA1BWF,eAAe;AAAAsB,EAAA,GAAftB,eAAe;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}